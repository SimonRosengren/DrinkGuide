[{"/Users/simonrosengren/repos/drinkguide/client/src/reportWebVitals.js":"1","/Users/simonrosengren/repos/drinkguide/client/src/components/header/header.js":"2","/Users/simonrosengren/repos/drinkguide/client/src/App.js":"3","/Users/simonrosengren/repos/drinkguide/client/src/components/ingredientForm/ingredientForm.js":"4","/Users/simonrosengren/repos/drinkguide/client/src/index.js":"5","/Users/simonrosengren/repos/drinkguide/client/src/components/inputWithButton/inputWithButton.js":"6","/Users/simonrosengren/repos/drinkguide/client/src/components/ingredientCard/ingredientCard.js":"7","/Users/simonrosengren/repos/drinkguide/client/src/components/logo/logo.js":"8","/Users/simonrosengren/repos/drinkguide/client/src/pages/ingredientPicker/IngredientPicker.js":"9","/Users/simonrosengren/repos/drinkguide/client/src/pages/drinkBrowser/drinkBrowser.js":"10","/Users/simonrosengren/repos/drinkguide/client/src/components/drinkCard/drinkCard.js":"11"},{"size":362,"mtime":1610567974503,"results":"12","hashOfConfig":"13"},{"size":419,"mtime":1613427115966,"results":"14","hashOfConfig":"13"},{"size":1080,"mtime":1613144367518,"results":"15","hashOfConfig":"13"},{"size":4100,"mtime":1612907334011,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1610567974502,"results":"17","hashOfConfig":"13"},{"size":798,"mtime":1612473903940,"results":"18","hashOfConfig":"13"},{"size":789,"mtime":1612905960577,"results":"19","hashOfConfig":"13"},{"size":354,"mtime":1613427079264,"results":"20","hashOfConfig":"13"},{"size":2751,"mtime":1613429470239,"results":"21","hashOfConfig":"13"},{"size":1456,"mtime":1613429834608,"results":"22","hashOfConfig":"13"},{"size":489,"mtime":1613429733106,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10tjgll",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/simonrosengren/repos/drinkguide/client/src/reportWebVitals.js",[],["50","51"],"/Users/simonrosengren/repos/drinkguide/client/src/components/header/header.js",[],"/Users/simonrosengren/repos/drinkguide/client/src/App.js",["52"],"/Users/simonrosengren/repos/drinkguide/client/src/components/ingredientForm/ingredientForm.js",["53"],"import React, { useState } from \"react\";\nimport \"./ingredientForm.scss\";\n\nfunction IngredientForm(props) {\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [ingredientInput, setIngredientInput] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [currentIngredient, setCurrentIngredient] = useState({});\n  const [qtyInput, setQtyInput] = useState(0);\n\n  const suggestIngredients = async (e) => {\n    setIngredientInput(e.target.value);\n    if (e.target.value) {\n      const result = await (\n        await fetch(\n          `/api/ingredient/suggest?phrase=${e.target.value}`\n        )\n      ).json();\n      let temp = [];\n      (result || []).forEach((i) => {\n        temp.push(i); // We have _id here aswell\n      });\n      setSuggestions(temp);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleIngredientsInput = (e) => {\n    const clickedIngredient = suggestions.find((i) => i.name === e.target.innerHTML)\n    setCurrentIngredient(clickedIngredient);\n    setIngredientInput(e.target.innerHTML)\n  };\n\n  const addIngredient = () => {\n    let temp = ingredients;\n    temp.push({ \n        qtyInput,\n        ...currentIngredient\n     });\n    setIngredients(temp);\n    setIngredientInput(\"\");\n    setQtyInput(\"\")\n    setSuggestions([]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(recipeName)\n    const result = await fetch(`/api/recipe`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            name: recipeName,\n            description,\n            instructions,\n            ingredients\n        })\n    })\n    \n  };\n\n  return (\n    <div className=\"formContainer\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"inputWrapper\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"fullsize\"\n            value={recipeName}\n            onChange={(e) => {\n              setRecipeName(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"inputWrapper\">\n          <label for=\"description\">Description</label>\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            className=\"fullsize\"\n            value={description}\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"inputWrapper\">\n          <label for=\"instructions\">Instructions</label>\n          <textarea\n            type=\"text\"\n            name=\"instructions\"\n            className=\"fullsize\"\n            value={instructions}\n            onChange={(e) => {\n              setInstructions(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"ingredientWrapper\">\n          <div className=\"suggestionWrapper\">\n            <div className=\"inputWrapper\">\n              <label for=\"ingredients\">Ingredients</label>\n              <input\n                type=\"text\"\n                name=\"ingredients\"\n                className=\"halfsize\"\n                value={ingredientInput}\n                onChange={(e) => {\n                  suggestIngredients(e);\n                }}\n              />\n            </div>\n\n            <div className=\"inputWrapper\">\n              <ul className=\"halfsize\">\n                {suggestions.map((s, index) => (\n                  <li key={index} onClick={handleIngredientsInput}>\n                    {s.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <input type=\"text\" name=\"qty\" className=\"halfsize\" value={qtyInput} onChange={e => setQtyInput(e.target.value)} />\n          <button onClick={() => { addIngredient() }}>add</button>\n        </div>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default IngredientForm;\n",["54","55"],"/Users/simonrosengren/repos/drinkguide/client/src/index.js",[],"/Users/simonrosengren/repos/drinkguide/client/src/components/inputWithButton/inputWithButton.js",["56"],"import React, { useState } from \"react\";\nimport styles from \"./inputWithButton.module.scss\";\nimport { RiSearch2Line } from \"react-icons/ri\";\n\nfunction InputWithButton(props) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(value);\n  };\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n    if (props.handleOnChange) {\n      props.handleOnChange(e);\n    }\n  }\n\n  return (\n    <div className={styles.wrapper}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          placeholder=\"Search ingredients...\"\n          onChange={e => handleOnChange(e)}\n        />\n        <div className={styles.button}><RiSearch2Line /></div>\n    </div>\n  );\n}\n\nexport default InputWithButton;\n","/Users/simonrosengren/repos/drinkguide/client/src/components/ingredientCard/ingredientCard.js",[],"/Users/simonrosengren/repos/drinkguide/client/src/components/logo/logo.js",[],"/Users/simonrosengren/repos/drinkguide/client/src/pages/ingredientPicker/IngredientPicker.js",[],"/Users/simonrosengren/repos/drinkguide/client/src/pages/drinkBrowser/drinkBrowser.js",[],"/Users/simonrosengren/repos/drinkguide/client/src/components/drinkCard/drinkCard.js",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":50,"nodeType":"65","messageId":"66","endLine":7,"endColumn":54},{"ruleId":"63","severity":1,"message":"67","line":53,"column":11,"nodeType":"65","messageId":"66","endLine":53,"endColumn":17},{"ruleId":"59","replacedBy":"68"},{"ruleId":"61","replacedBy":"69"},{"ruleId":"63","severity":1,"message":"70","line":8,"column":9,"nodeType":"65","messageId":"66","endLine":8,"endColumn":21},{"ruleId":"63","severity":1,"message":"71","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"72","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'result' is assigned a value but never used.",["73"],["74"],"'handleSubmit' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]